<Activity mc:Ignorable="sap sap2010" x:Class="TakeScreenshot" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:d="clr-namespace:dhl_dtentry_oracle_library_Windows;assembly=dhl-dtentry-oracle-library_Windows" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="PastaOrigem" Type="InArgument(x:String)" />
    <x:Property Name="DocumentoId" Type="InArgument(x:String)" />
    <x:Property Name="RI" Type="InArgument(x:String)" />
    <x:Property Name="ProcessoExportacaoId" Type="InArgument(x:String)" />
    <x:Property Name="Mensagem" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>881.3333333333334,1182</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TakeScreenshot_2</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>dhl_dtentry_oracle_library_Windows</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>dhl-dtentry-oracle-library_Windows</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Usage: Set in_Folder to the folder Name where you want to save the screenshot. Alternatively, supply the full path including filename in io_FilePath. Description: This workflow captures a screenshot and logs it's name and location. It then saves it. If io_FilePath is empty, it will try to save the picture in in_Folder.  It uses .png extension." DisplayName="Screenshot sequence" sap:VirtualizedContainerService.HintSize="540,1117.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PrintScreen_Folder" />
      <Variable x:TypeArguments="x:String" Name="PrintScreen_Name" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="478,92" sap2010:WorkflowViewState.IdRef="Delay_3" />
    <Assign sap:VirtualizedContainerService.HintSize="478,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[PrintScreen_Folder]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(PastaOrigem,"(Original)\\(\d+)","Prints")+"\"+DocumentoId]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[Not Mensagem.Contains(&quot;[PRINT]&quot;)]" sap:VirtualizedContainerService.HintSize="478,578.6666666666666" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="400,395" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[Mensagem.IsNullOrEmpty]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[PrintScreen_Name]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[ProcessoExportacaoId+"_"+RI+"_"+System.DateTime.Now.ToString("dd-MM-yyyy_hh.mm.ss")+".png"]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
            <If.Else>
              <If Condition="[Mensagem.Replace(&quot;[PRINT]&quot;,&quot;&quot;).Replace(&quot;[CANCELAR_PROCESSO]&quot;,&quot;&quot;).Length&gt;90]" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[PrintScreen_Name]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ProcessoExportacaoId+"_"+RI+"_"+System.Text.RegularExpressions.Regex.Replace(Mensagem.Replace("[PRINT]","").Replace("[CANCELAR_PROCESSO]","").Substring(0,89),"[\\\/\:\*\?\&lt;\&gt;\|]+","")+"_"+System.DateTime.Now.ToString("dd-MM-yyyy_hh.mm.ss")+".png"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[PrintScreen_Name]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ProcessoExportacaoId+"_"+RI+"_"+System.Text.RegularExpressions.Regex.Replace(Mensagem.Replace("[PRINT]","").Replace("[CANCELAR_PROCESSO]",""),"[\\\/\:\*\?\&lt;\&gt;\|]+","")+"_"+System.DateTime.Now.ToString("dd-MM-yyyy_hh.mm.ss")+".png"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </If.Else>
          </If>
          <d:TakeScreenshot FilePath="{x:Null}" sap:VirtualizedContainerService.HintSize="338,192" sap2010:WorkflowViewState.IdRef="TakeScreenshot_4" PrintScreen_Folder="[PrintScreen_Folder]" PrintScreen_Name="[PrintScreen_Name]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_6" />
      </If.Else>
    </If>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="478,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="650,279" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Usage: Set in_Folder to the folder Name where you want to save the screenshot. Alternatively, supply the full path including filename in io_FilePath. Description: This workflow captures a screenshot and logs it's name and location. It then saves it. If io_FilePath is empty, it will try to save the picture in in_Folder.  It uses .png extension." DisplayName="Screenshot sequence" sap:VirtualizedContainerService.HintSize="400,168" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:Image" Name="screenshot" />
              <Variable x:TypeArguments="x:String" Name="screenshotFileInfo" />
              <Variable x:TypeArguments="x:Boolean" Name="hasExtension" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="526,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
            <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take screenshot" sap:VirtualizedContainerService.HintSize="526,106" sap2010:WorkflowViewState.IdRef="TakeScreenshot_3" Screenshot="[screenshot]">
              <ui:TakeScreenshot.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f0828d6e-367b-4b3a-bc6d-c46cd676e172" InformativeScreenshot="5ba93a089bc2ebbe7316a9ef4f338d7c" Selector="&lt;wnd app='jp2launcher.exe' cls='SunAwtFrame' omit:title='Aplicativos Oracle - AMEPRJB' /&gt;&lt;java idx='1' role='panel' /&gt;" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:TakeScreenshot.Target>
            </ui:TakeScreenshot>
            <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="526,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
            <ui:IsMatch DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[PrintScreen_Name.ToUpper]" IsBuilderTabModified="False" Pattern="(\.(PNG)|(JPEG))$" RegexOption="IgnoreCase, Compiled" Result="[hasExtension]" />
            <If Condition="[not hasExtension]" DisplayName="If no extension" sap:VirtualizedContainerService.HintSize="526,208" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Assign DisplayName="Make file path" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PrintScreen_Name]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[PrintScreen_Name+".png"]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <Sequence DisplayName="Create Folder if doesn't exist" sap:VirtualizedContainerService.HintSize="526,324" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[Directory.Exists(PrintScreen_Folder)]" DisplayName="If directory does not exist, create it" sap:VirtualizedContainerService.HintSize="484,232" sap2010:WorkflowViewState.IdRef="If_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Else>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create directory" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[PrintScreen_Folder]" />
                </If.Else>
              </If>
            </Sequence>
            <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PrintScreen_Name]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(PrintScreen_Folder,"(\\)$","")+"\"+PrintScreen_Name]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:SaveImage DisplayName="Save screenshot" FileName="[PrintScreen_Name]" sap:VirtualizedContainerService.HintSize="526,92" sap2010:WorkflowViewState.IdRef="SaveImage_1" Image="[screenshot]" />
            <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="526,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Screenshot saved at: &quot;+PrintScreen_Name]" />
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>